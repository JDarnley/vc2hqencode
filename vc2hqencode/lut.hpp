/*****************************************************************************
 * lut.hpp : Look Up Table for VLC
 *****************************************************************************
 * Copyright (C) 2014-2015 BBC
 *
 * Authors: James P. Weaver <james.barrett@bbc.co.uk>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02111, USA.
 *
 * This program is also available under a commercial proprietary license.
 * For more information, contact us at ipstudio@bbc.co.uk.
 *****************************************************************************/

#ifndef __LUT_HPP__
#define __LUT_HPP__
#include <stdint.h>

/* Codeword for a particular value is the concatenation of codeword_lut[x] for each byte in the value starting with the most significant,
   followed by the codes 10, 1 or 11 for positive, zero, and negative respectfully.
   number of bits to use (including sign bit(s)) is length_lut[MSNZB] + 16*NNZB + 2 (Most Significant Non-Zero Byte, Number of Non-Zero Bytes)
   or just 1 for a zero value. */

static const uint32_t codeword_lut[] = {
        0x00000000, 0x00000004, 0x00000010, 0x00000014, 0x00000040, 0x00000044, 0x00000050, 0x00000054, 0x00000100, 0x00000104, 0x00000110, 0x00000114, 0x00000140, 0x00000144, 0x00000150, 0x00000154,
        0x00000400, 0x00000404, 0x00000410, 0x00000414, 0x00000440, 0x00000444, 0x00000450, 0x00000454, 0x00000500, 0x00000504, 0x00000510, 0x00000514, 0x00000540, 0x00000544, 0x00000550, 0x00000554,
        0x00001000, 0x00001004, 0x00001010, 0x00001014, 0x00001040, 0x00001044, 0x00001050, 0x00001054, 0x00001100, 0x00001104, 0x00001110, 0x00001114, 0x00001140, 0x00001144, 0x00001150, 0x00001154,
        0x00001400, 0x00001404, 0x00001410, 0x00001414, 0x00001440, 0x00001444, 0x00001450, 0x00001454, 0x00001500, 0x00001504, 0x00001510, 0x00001514, 0x00001540, 0x00001544, 0x00001550, 0x00001554,
        0x00004000, 0x00004004, 0x00004010, 0x00004014, 0x00004040, 0x00004044, 0x00004050, 0x00004054, 0x00004100, 0x00004104, 0x00004110, 0x00004114, 0x00004140, 0x00004144, 0x00004150, 0x00004154,
        0x00004400, 0x00004404, 0x00004410, 0x00004414, 0x00004440, 0x00004444, 0x00004450, 0x00004454, 0x00004500, 0x00004504, 0x00004510, 0x00004514, 0x00004540, 0x00004544, 0x00004550, 0x00004554,
        0x00005000, 0x00005004, 0x00005010, 0x00005014, 0x00005040, 0x00005044, 0x00005050, 0x00005054, 0x00005100, 0x00005104, 0x00005110, 0x00005114, 0x00005140, 0x00005144, 0x00005150, 0x00005154,
        0x00005400, 0x00005404, 0x00005410, 0x00005414, 0x00005440, 0x00005444, 0x00005450, 0x00005454, 0x00005500, 0x00005504, 0x00005510, 0x00005514, 0x00005540, 0x00005544, 0x00005550, 0x00005554,
        0x00010000, 0x00010004, 0x00010010, 0x00010014, 0x00010040, 0x00010044, 0x00010050, 0x00010054, 0x00010100, 0x00010104, 0x00010110, 0x00010114, 0x00010140, 0x00010144, 0x00010150, 0x00010154,
        0x00010400, 0x00010404, 0x00010410, 0x00010414, 0x00010440, 0x00010444, 0x00010450, 0x00010454, 0x00010500, 0x00010504, 0x00010510, 0x00010514, 0x00010540, 0x00010544, 0x00010550, 0x00010554,
        0x00011000, 0x00011004, 0x00011010, 0x00011014, 0x00011040, 0x00011044, 0x00011050, 0x00011054, 0x00011100, 0x00011104, 0x00011110, 0x00011114, 0x00011140, 0x00011144, 0x00011150, 0x00011154,
        0x00011400, 0x00011404, 0x00011410, 0x00011414, 0x00011440, 0x00011444, 0x00011450, 0x00011454, 0x00011500, 0x00011504, 0x00011510, 0x00011514, 0x00011540, 0x00011544, 0x00011550, 0x00011554,
        0x00014000, 0x00014004, 0x00014010, 0x00014014, 0x00014040, 0x00014044, 0x00014050, 0x00014054, 0x00014100, 0x00014104, 0x00014110, 0x00014114, 0x00014140, 0x00014144, 0x00014150, 0x00014154,
        0x00014400, 0x00014404, 0x00014410, 0x00014414, 0x00014440, 0x00014444, 0x00014450, 0x00014454, 0x00014500, 0x00014504, 0x00014510, 0x00014514, 0x00014540, 0x00014544, 0x00014550, 0x00014554,
        0x00015000, 0x00015004, 0x00015010, 0x00015014, 0x00015040, 0x00015044, 0x00015050, 0x00015054, 0x00015100, 0x00015104, 0x00015110, 0x00015114, 0x00015140, 0x00015144, 0x00015150, 0x00015154,
        0x00015400, 0x00015404, 0x00015410, 0x00015414, 0x00015440, 0x00015444, 0x00015450, 0x00015454, 0x00015500, 0x00015504, 0x00015510, 0x00015514, 0x00015540, 0x00015544, 0x00015550, 0x00015554
    };

static const uint32_t first_codeword_lut[] = {
        0x00000000, 0x00000000, 0x00000000, 0x00000004, 0x00000000, 0x00000004, 0x00000010, 0x00000014, 0x00000000, 0x00000004, 0x00000010, 0x00000014, 0x00000040, 0x00000044, 0x00000050, 0x00000054,
        0x00000000, 0x00000004, 0x00000010, 0x00000014, 0x00000040, 0x00000044, 0x00000050, 0x00000054, 0x00000100, 0x00000104, 0x00000110, 0x00000114, 0x00000140, 0x00000144, 0x00000150, 0x00000154,
        0x00000000, 0x00000004, 0x00000010, 0x00000014, 0x00000040, 0x00000044, 0x00000050, 0x00000054, 0x00000100, 0x00000104, 0x00000110, 0x00000114, 0x00000140, 0x00000144, 0x00000150, 0x00000154,
        0x00000400, 0x00000404, 0x00000410, 0x00000414, 0x00000440, 0x00000444, 0x00000450, 0x00000454, 0x00000500, 0x00000504, 0x00000510, 0x00000514, 0x00000540, 0x00000544, 0x00000550, 0x00000554,
        0x00000000, 0x00000004, 0x00000010, 0x00000014, 0x00000040, 0x00000044, 0x00000050, 0x00000054, 0x00000100, 0x00000104, 0x00000110, 0x00000114, 0x00000140, 0x00000144, 0x00000150, 0x00000154,
        0x00000400, 0x00000404, 0x00000410, 0x00000414, 0x00000440, 0x00000444, 0x00000450, 0x00000454, 0x00000500, 0x00000504, 0x00000510, 0x00000514, 0x00000540, 0x00000544, 0x00000550, 0x00000554,
        0x00001000, 0x00001004, 0x00001010, 0x00001014, 0x00001040, 0x00001044, 0x00001050, 0x00001054, 0x00001100, 0x00001104, 0x00001110, 0x00001114, 0x00001140, 0x00001144, 0x00001150, 0x00001154,
        0x00001400, 0x00001404, 0x00001410, 0x00001414, 0x00001440, 0x00001444, 0x00001450, 0x00001454, 0x00001500, 0x00001504, 0x00001510, 0x00001514, 0x00001540, 0x00001544, 0x00001550, 0x00001554,
        0x00000000, 0x00000004, 0x00000010, 0x00000014, 0x00000040, 0x00000044, 0x00000050, 0x00000054, 0x00000100, 0x00000104, 0x00000110, 0x00000114, 0x00000140, 0x00000144, 0x00000150, 0x00000154,
        0x00000400, 0x00000404, 0x00000410, 0x00000414, 0x00000440, 0x00000444, 0x00000450, 0x00000454, 0x00000500, 0x00000504, 0x00000510, 0x00000514, 0x00000540, 0x00000544, 0x00000550, 0x00000554,
        0x00001000, 0x00001004, 0x00001010, 0x00001014, 0x00001040, 0x00001044, 0x00001050, 0x00001054, 0x00001100, 0x00001104, 0x00001110, 0x00001114, 0x00001140, 0x00001144, 0x00001150, 0x00001154,
        0x00001400, 0x00001404, 0x00001410, 0x00001414, 0x00001440, 0x00001444, 0x00001450, 0x00001454, 0x00001500, 0x00001504, 0x00001510, 0x00001514, 0x00001540, 0x00001544, 0x00001550, 0x00001554,
        0x00004000, 0x00004004, 0x00004010, 0x00004014, 0x00004040, 0x00004044, 0x00004050, 0x00004054, 0x00004100, 0x00004104, 0x00004110, 0x00004114, 0x00004140, 0x00004144, 0x00004150, 0x00004154,
        0x00004400, 0x00004404, 0x00004410, 0x00004414, 0x00004440, 0x00004444, 0x00004450, 0x00004454, 0x00004500, 0x00004504, 0x00004510, 0x00004514, 0x00004540, 0x00004544, 0x00004550, 0x00004554,
        0x00005000, 0x00005004, 0x00005010, 0x00005014, 0x00005040, 0x00005044, 0x00005050, 0x00005054, 0x00005100, 0x00005104, 0x00005110, 0x00005114, 0x00005140, 0x00005144, 0x00005150, 0x00005154,
        0x00005400, 0x00005404, 0x00005410, 0x00005414, 0x00005440, 0x00005444, 0x00005450, 0x00005454, 0x00005500, 0x00005504, 0x00005510, 0x00005514, 0x00005540, 0x00005544, 0x00005550, 0x00005554
    };

static const char length_lut[] = {
         0,  0,  2,  2,  4,  4,  4,  4,  6,  6,  6,  6,  6,  6,  6,  6,
         8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
    };
static const uint16_t CWLUT[] = {
        0x0001, 0x0002, 0x0006, 0x0002, 0x0006, 0x0012, 0x0016, 0x0002, 0x0006, 0x0012, 0x0016, 0x0042, 0x0046, 0x0052, 0x0056, 0x0002,
        0x0006, 0x0012, 0x0016, 0x0042, 0x0046, 0x0052, 0x0056, 0x0102, 0x0106, 0x0112, 0x0116, 0x0142, 0x0146, 0x0152, 0x0156, 0x0002,
        0x0006, 0x0012, 0x0016, 0x0042, 0x0046, 0x0052, 0x0056, 0x0102, 0x0106, 0x0112, 0x0116, 0x0142, 0x0146, 0x0152, 0x0156, 0x0402,
        0x0406, 0x0412, 0x0416, 0x0442, 0x0446, 0x0452, 0x0456, 0x0502, 0x0506, 0x0512, 0x0516, 0x0542, 0x0546, 0x0552, 0x0556, 0x0002,
        0x0006, 0x0012, 0x0016, 0x0042, 0x0046, 0x0052, 0x0056, 0x0102, 0x0106, 0x0112, 0x0116, 0x0142, 0x0146, 0x0152, 0x0156, 0x0402,
        0x0406, 0x0412, 0x0416, 0x0442, 0x0446, 0x0452, 0x0456, 0x0502, 0x0506, 0x0512, 0x0516, 0x0542, 0x0546, 0x0552, 0x0556, 0x1002,
        0x1006, 0x1012, 0x1016, 0x1042, 0x1046, 0x1052, 0x1056, 0x1102, 0x1106, 0x1112, 0x1116, 0x1142, 0x1146, 0x1152, 0x1156, 0x1402,
        0x1406, 0x1412, 0x1416, 0x1442, 0x1446, 0x1452, 0x1456, 0x1502, 0x1506, 0x1512, 0x1516, 0x1542, 0x1546, 0x1552, 0x1556, 0x0002,
        0x0006, 0x0012, 0x0016, 0x0042, 0x0046, 0x0052, 0x0056, 0x0102, 0x0106, 0x0112, 0x0116, 0x0142, 0x0146, 0x0152, 0x0156, 0x0402,
        0x0406, 0x0412, 0x0416, 0x0442, 0x0446, 0x0452, 0x0456, 0x0502, 0x0506, 0x0512, 0x0516, 0x0542, 0x0546, 0x0552, 0x0556, 0x1002,
        0x1006, 0x1012, 0x1016, 0x1042, 0x1046, 0x1052, 0x1056, 0x1102, 0x1106, 0x1112, 0x1116, 0x1142, 0x1146, 0x1152, 0x1156, 0x1402,
        0x1406, 0x1412, 0x1416, 0x1442, 0x1446, 0x1452, 0x1456, 0x1502, 0x1506, 0x1512, 0x1516, 0x1542, 0x1546, 0x1552, 0x1556, 0x4002,
        0x4006, 0x4012, 0x4016, 0x4042, 0x4046, 0x4052, 0x4056, 0x4102, 0x4106, 0x4112, 0x4116, 0x4142, 0x4146, 0x4152, 0x4156, 0x4402,
        0x4406, 0x4412, 0x4416, 0x4442, 0x4446, 0x4452, 0x4456, 0x4502, 0x4506, 0x4512, 0x4516, 0x4542, 0x4546, 0x4552, 0x4556, 0x5002,
        0x5006, 0x5012, 0x5016, 0x5042, 0x5046, 0x5052, 0x5056, 0x5102, 0x5106, 0x5112, 0x5116, 0x5142, 0x5146, 0x5152, 0x5156, 0x5402,
        0x5406, 0x5412, 0x5416, 0x5442, 0x5446, 0x5452, 0x5456, 0x5502, 0x5506, 0x5512, 0x5516, 0x5542, 0x5546, 0x5552, 0x5556, 0x0002
    };
static const uint16_t WLLUT[] = {
        1, 4, 4, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18
    };

#endif /* __LUT_HPP__ */
